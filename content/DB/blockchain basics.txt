Blockchain basics

A blockchain is a decentralized ledger that records information in a sequence of blocks. The information contained in a block is an ordered set of instructions that might result in a change in state.

In a blockchain network, individual computers—called nodes—communicate with each other to form a decentralized peer-to-peer (P2P) network. There is no central authority that controls the network and, typically, each node that participates in block production stores a copy of the blocks that make up the canonical chain.

In most cases, users interact with a blockchain by submitting a request that might result in a change in state, for example, a request to change the owner of a file or to transfer funds from one account to another. These transactions requests are gossiped to other nodes on the network and assembled into a block by a block author. To ensure the security of the data on the chain and the ongoing progress of the chain, the nodes use some form of consensus to agree on the state of the data in each block and on the order of transactions executed.

What is a blockchain node?

At a high level, all blockchain nodes require the following core components:

Data storage for the state changes recorded as a result of transactions.
Peer-to-peer networking for decentralized communication between nodes.
Consensus methodology to protect against malicious activity and ensure the ongoing progress of the chain.
Logic for ordering and processing incoming transactions.
Cryptography for generating hash digests for blocks and for signing and verifying the signatures associated with transactions.
Because of the complexity involved in building the core components a blockchain requires, most blockchain projects start with a complete copy of an existing blockchain code base so that developers can modify existing code to add new features instead of writing everything from scratch. For example, the Bitcoin repository was forked to create Litecoin, ZCash, Namecoin and Bitcoin Cash. Similarly, the Ethereum repository was forked to create Quorum, POA Network, KodakCoin, and Musicoin.

However, most blockchain platforms are not designed to allow for modification or customization. As a result, building a new blockchain by forking has serious limitations, including limitations such as scalability that are inherent in the originating blockchain code. Before you explore how Substrate alleviates many of the limitations associated with other blockchain projects, it's important to understand some of the common properties that most blockchains share. By learning about how most blockchains operate, you'll be better prepared to see how Substrate provides alternatives and capabilities for building a blockchain best suited to your needs.

State transitions and conflicts

A blockchain is essentially a state machine. At any point in time, the blockchain has a current internal state. As inbound transactions are executed, they result in changes to state so the blockchain must transition from its current state to a new state. However, there can be multiple valid transitions that would result in different future states, and the blockchain must select a single state transition that can be agreed upon. To agree on the state after a transition, all operations within a blockchain must be deterministic. For the chain to progress successfully, a majority of the nodes must agree on all of the state transitions, including:

The initial state of the chain, called the genesis state or genesis block.
The series of state transitions that result from executed transactions that are recorded in each block.
A final state for the block to be included in the chain.
In centralized networks, a central authority can choose between mutually exclusive state transitions. For example, a server configured as the primary authority might record changes to state transition in the order it sees them or use a weighting process to choose between competing alternatives when a conflict arises. In a decentralized network, the nodes see transactions in different orders, so they must use a more elaborate method to select transactions and choose between conflicting state transition.

The method that a blockchain uses to batch transactions into blocks and to select which node can submit a block to the chain is called the blockchain's consensus model or consensus algorithm. The most commonly-used consensus model is called the proof-of-work consensus model. With the proof-of-work consensus model, the node that completes a computational problem first has the right to submit a block to the chain.

For a blockchain to be fault tolerant and provide a consistent view of state even if some nodes are compromised by malicious actors or network outages, some consensus models require at least two-thirds of the nodes to agree on state at all time. This two-thirds majority ensures that the network is fault tolerant and can withstand some network participants behaving badly, regardless of whether the behavior is intentional or accidental.

Blockchain economics

All blockchains require resources—processors, memory, storage, and network bandwidth—to perform operations. The computers that participate in the network—the nodes that produce blocks—provide these resources to blockchain users. The nodes create a distributed, decentralized network that serves the needs of a community of participants.

To support a community and make a blockchain sustainable, most blockchains require users to pay for the network resources they use in the form of transaction fees. The payment of transaction fees requires user identities to be associated with accounts that hold assets of some type. Blockchains typically use tokens to represent the value of assets in an account and network participants purchase tokens outside of the chain through an exchange. Network participants can then deposit the tokens to enable them to pay for transactions.

Blockchain governance

Some blockchains allow network participants to submit and vote on proposals that affect network operations or the blockchain community. By submitting and voting on proposals—referenda—the blockchain community can determine how the blockchain evolves in an essentially democratic process. On-chain governance is relatively rare, however, and to participate, a blockchain might require users to maintain a significant stake of tokens in an account or to be selected as a representative for other users.

Applications running on a blockchain

Applications that run on a blockchain—often referred to as decentralized applications or dApps—are typically web applications that are written using front-end frameworks but with backend smart contracts for changing the blockchain state.

A smart contract is a program that runs on a blockchain and executes transactions on behalf of users under specific conditions. Developers can write smart contracts to ensure that the outcome of programmatically-executed transactions is recorded and can't be tampered with. Yet, with smart contracts alone, developers don't have access to some underlying blockchain functionality—such as the consensus, storage, or transaction layers—and instead, abide by a chain's fixed rules and restrictions. Smart contract developers often accept these limitations as a tradeoff that enables faster development time with fewer core design decisions to make.

What Are Bitcoin Hard Forks?
A Bitcoin hard fork is a protocol change that creates a new set of rules for the computers that make up the blockchain network. If a hard fork is implemented without the complete agreement of other network participants, it can cause the cryptocurrency network to split into two.

A hard fork is different from a soft fork, a protocol change that does not reject the pre-existing rule set. A hard fork requires all network participants to upgrade to the new rule set and reject the old rules, while a soft fork will continue to accept transactions created by the old rule set.

The terms were adopted from software programming, where forks can sometimes occur when two groups of developers choose to build out competing versions of the same project. However, a blockchain hard fork usually results in two distinct ledgers and transaction networks—effectively creating a new cryptocurrency.

Over the years, many developers have attempted to hard fork the Bitcoin protocol, either to fix the perceived flaws of the original system or to enrich themselves. There have been dozens of Bitcoin hard forks, but none have had the staying power of the original.

A Timeline of Bitcoin Hard Forks
Bitcoin XT
Bitcoin XT was one of the first notable hard forks of bitcoin. The software was launched by Mike Hearn in late 2014 in order to include several new features he had proposed. While the previous version of bitcoin allowed up to seven transactions per second, Bitcoin XT aimed for 24 transactions per second. In order to accomplish this, it proposed increasing the block size from one megabyte to eight megabytes.

Bitcoin XT initially saw success, with anywhere between 30,000 to over 40,000 nodes running its software in the late summer of 2015. However, just a few months later, the project lost user interest and was essentially abandoned by its users. Bitcoin XT is no longer available.
4
5

Bitcoin Classic
When Bitcoin XT declined, some community members still wanted block sizes to increase. In response, a group of developers launched Bitcoin Classic in early 2016. Unlike XT, which proposed increasing the block size to eight megabytes, classic intended to increase it to only two megabytes.

Like Bitcoin XT, Bitcoin Classic saw initial interest, with a range of about 27,000 up to 200,000 nodes for several months during 2016.
5
 The project also still exists today, with some developers strongly supporting Bitcoin Classic. Nonetheless, the larger cryptocurrency community seems to have generally moved on to other options.
4

Bitcoin Unlimited
Bitcoin Unlimited has remained something of an enigma since its release in early 2016. The project's developers released code but did not specify which type of fork it would require. Bitcoin Unlimited set itself apart by allowing miners to decide on the size of their blocks, with nodes and miners limiting the size of blocks they accept, up to 16 megabytes.
6
7

Despite some lingering interest, bitcoin unlimited has largely failed to gain acceptance.

Segregated Witness
Bitcoin Core developer Pieter Wuille presented the idea of Segregated Witness (SegWit) in late 2015. Put simply, SegWit aims to reduce the size of each bitcoin transaction, thereby allowing more transactions to take place at once. SegWit was technically a soft fork. However, it may have helped to prompt hard forks after it was originally proposed.
8

Bitcoin Cash
In response to SegWit, some bitcoin developers and users decided to initiate a hard fork in order to avoid the protocol updates it brought about. Bitcoin Cash was the result of this hard fork. It split off from the main blockchain in August 2017, when Bitcoin Cash wallets rejected bitcoin transactions and blocks.
9

Bitcoin Cash remains the most successful hard fork of the primary cryptocurrency. As of June 2023, it is the 28th largest digital currency by market cap.
1

Bitcoin Cash allows blocks of 32 megabytes and did not adopt the SegWit protocol.
10

Bitcoin Gold
Bitcoin Gold was a hard fork that followed shortly after bitcoin cash, in October 2017. The creators of this hard fork aimed to restore the mining functionality with basic graphics processing units (GPU), as they felt that mining had become too specialized in terms of equipment and hardware required.
